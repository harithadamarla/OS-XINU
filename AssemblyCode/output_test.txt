
resched2.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <resched2>:
/*------------------------------------------------------------------------
 *  *  resched  -  Reschedule processor to highest priority eligible process
 *   *------------------------------------------------------------------------
 *    */
void    resched2(uint16 status)           /* Assumes interrupts are disabled      */
{
   0:	e92d4070 	push	{r4, r5, r6, lr}
        struct procent *ptold;  /* Ptr to table entry for old process   */
        struct procent *ptnew;  /* Ptr to table entry for new process   */

        /* If rescheduling is deferred, record attempt and return */

        if (Defer.ndefers > 0) {
   4:	e59f30c8 	ldr	r3, [pc, #200]	; d4 <resched2+0xd4>
   8:	e5933000 	ldr	r3, [r3]
   c:	e3530000 	cmp	r3, #0
  10:	da000003 	ble	24 <resched2+0x24>
                Defer.attempt = TRUE;
  14:	e3a02001 	mov	r2, #1
  18:	e59f30b4 	ldr	r3, [pc, #180]	; d4 <resched2+0xd4>
  1c:	e5c32004 	strb	r2, [r3, #4]
                return;
  20:	e8bd8070 	pop	{r4, r5, r6, pc}
        }

        /* Point to process table entry for the current (old) process */

        ptold = &proctab[currpid];
  24:	e59f30ac 	ldr	r3, [pc, #172]	; d8 <resched2+0xd8>
  28:	e5933000 	ldr	r3, [r3]
  2c:	e0634183 	rsb	r4, r3, r3, lsl #3
  30:	e1a04184 	lsl	r4, r4, #3
  34:	e59fc0a0 	ldr	ip, [pc, #160]	; dc <resched2+0xdc>
  38:	e084500c 	add	r5, r4, ip

        ptold->prstate=status;
  3c:	e18400bc 	strh	r0, [r4, ip]

        if (status == PR_CURR || status ==PR_READY) {  /* Process remains eligible */
  40:	e2400001 	sub	r0, r0, #1
  44:	e6ff0070 	uxth	r0, r0
  48:	e3500001 	cmp	r0, #1
  4c:	8a00000e 	bhi	8c <resched2+0x8c>
                if (ptold->prprio > firstkey(readylist)) {
  50:	e1d520f2 	ldrsh	r2, [r5, #2]
  54:	e59f1084 	ldr	r1, [pc, #132]	; e0 <resched2+0xe0>
  58:	e1d110b0 	ldrh	r1, [r1]
  5c:	e59f0080 	ldr	r0, [pc, #128]	; e4 <resched2+0xe4>
  60:	e6bf6071 	sxth	r6, r1
  64:	e0806186 	add	r6, r0, r6, lsl #3
  68:	e1d660f4 	ldrsh	r6, [r6, #4]
  6c:	e7900186 	ldr	r0, [r0, r6, lsl #3]
  70:	e1520000 	cmp	r2, r0
  74:	c8bd8070 	popgt	{r4, r5, r6, pc}
                }


                /* Old process will no longer remain current */

                ptold->prstate=PR_READY;
  78:	e3a00002 	mov	r0, #2
  7c:	e18400bc 	strh	r0, [r4, ip]
                insert(currpid, readylist, ptold->prprio);
  80:	e1a00003 	mov	r0, r3
  84:	e6bf1071 	sxth	r1, r1
  88:	ebfffffe 	bl	0 <insert>
        }

        /* Force context switch to highest priority ready process */

        currpid = dequeue(readylist);
  8c:	e59f304c 	ldr	r3, [pc, #76]	; e0 <resched2+0xe0>
  90:	e1d300f0 	ldrsh	r0, [r3]
  94:	ebfffffe 	bl	0 <dequeue>
  98:	e59f3038 	ldr	r3, [pc, #56]	; d8 <resched2+0xd8>
  9c:	e5830000 	str	r0, [r3]
        ptnew = &proctab[currpid];
  a0:	e0600180 	rsb	r0, r0, r0, lsl #3
  a4:	e1a00180 	lsl	r0, r0, #3
  a8:	e59f302c 	ldr	r3, [pc, #44]	; dc <resched2+0xdc>
  ac:	e0801003 	add	r1, r0, r3
        ptnew->prstate = PR_CURR;
  b0:	e3a02001 	mov	r2, #1
  b4:	e18020b3 	strh	r2, [r0, r3]
        preempt = QUANTUM;              /* Reset time slice for process */
  b8:	e3a02002 	mov	r2, #2
  bc:	e59f3024 	ldr	r3, [pc, #36]	; e8 <resched2+0xe8>
  c0:	e5832000 	str	r2, [r3]
        FlushTLB();
        setPageTable();
#endif/*MMU*/

        
        ctxsw(&ptold->prstkptr, &ptnew->prstkptr);
  c4:	e2850004 	add	r0, r5, #4
  c8:	e2811004 	add	r1, r1, #4
  cc:	ebfffffe 	bl	0 <ctxsw>
  d0:	e8bd8070 	pop	{r4, r5, r6, pc}
	...
